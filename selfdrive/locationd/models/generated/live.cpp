#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8373769282202649548) {
   out_8373769282202649548[0] = 0;
   out_8373769282202649548[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8373769282202649548[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8373769282202649548[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8373769282202649548[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8373769282202649548[5] = -sin(in_vec[1]);
   out_8373769282202649548[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8373769282202649548[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8373769282202649548[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8373769282202649548[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8373769282202649548[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8373769282202649548[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8373769282202649548[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8373769282202649548[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8373769282202649548[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8373769282202649548[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8373769282202649548[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8373769282202649548[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7843686144394736817) {
   out_7843686144394736817[0] = delta_x[0] + nom_x[0];
   out_7843686144394736817[1] = delta_x[1] + nom_x[1];
   out_7843686144394736817[2] = delta_x[2] + nom_x[2];
   out_7843686144394736817[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7843686144394736817[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7843686144394736817[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7843686144394736817[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7843686144394736817[7] = delta_x[6] + nom_x[7];
   out_7843686144394736817[8] = delta_x[7] + nom_x[8];
   out_7843686144394736817[9] = delta_x[8] + nom_x[9];
   out_7843686144394736817[10] = delta_x[9] + nom_x[10];
   out_7843686144394736817[11] = delta_x[10] + nom_x[11];
   out_7843686144394736817[12] = delta_x[11] + nom_x[12];
   out_7843686144394736817[13] = delta_x[12] + nom_x[13];
   out_7843686144394736817[14] = delta_x[13] + nom_x[14];
   out_7843686144394736817[15] = delta_x[14] + nom_x[15];
   out_7843686144394736817[16] = delta_x[15] + nom_x[16];
   out_7843686144394736817[17] = delta_x[16] + nom_x[17];
   out_7843686144394736817[18] = delta_x[17] + nom_x[18];
   out_7843686144394736817[19] = delta_x[18] + nom_x[19];
   out_7843686144394736817[20] = delta_x[19] + nom_x[20];
   out_7843686144394736817[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4225469103014996173) {
   out_4225469103014996173[0] = -nom_x[0] + true_x[0];
   out_4225469103014996173[1] = -nom_x[1] + true_x[1];
   out_4225469103014996173[2] = -nom_x[2] + true_x[2];
   out_4225469103014996173[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4225469103014996173[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4225469103014996173[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4225469103014996173[6] = -nom_x[7] + true_x[7];
   out_4225469103014996173[7] = -nom_x[8] + true_x[8];
   out_4225469103014996173[8] = -nom_x[9] + true_x[9];
   out_4225469103014996173[9] = -nom_x[10] + true_x[10];
   out_4225469103014996173[10] = -nom_x[11] + true_x[11];
   out_4225469103014996173[11] = -nom_x[12] + true_x[12];
   out_4225469103014996173[12] = -nom_x[13] + true_x[13];
   out_4225469103014996173[13] = -nom_x[14] + true_x[14];
   out_4225469103014996173[14] = -nom_x[15] + true_x[15];
   out_4225469103014996173[15] = -nom_x[16] + true_x[16];
   out_4225469103014996173[16] = -nom_x[17] + true_x[17];
   out_4225469103014996173[17] = -nom_x[18] + true_x[18];
   out_4225469103014996173[18] = -nom_x[19] + true_x[19];
   out_4225469103014996173[19] = -nom_x[20] + true_x[20];
   out_4225469103014996173[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8358142402501933144) {
   out_8358142402501933144[0] = 1.0;
   out_8358142402501933144[1] = 0;
   out_8358142402501933144[2] = 0;
   out_8358142402501933144[3] = 0;
   out_8358142402501933144[4] = 0;
   out_8358142402501933144[5] = 0;
   out_8358142402501933144[6] = 0;
   out_8358142402501933144[7] = 0;
   out_8358142402501933144[8] = 0;
   out_8358142402501933144[9] = 0;
   out_8358142402501933144[10] = 0;
   out_8358142402501933144[11] = 0;
   out_8358142402501933144[12] = 0;
   out_8358142402501933144[13] = 0;
   out_8358142402501933144[14] = 0;
   out_8358142402501933144[15] = 0;
   out_8358142402501933144[16] = 0;
   out_8358142402501933144[17] = 0;
   out_8358142402501933144[18] = 0;
   out_8358142402501933144[19] = 0;
   out_8358142402501933144[20] = 0;
   out_8358142402501933144[21] = 0;
   out_8358142402501933144[22] = 1.0;
   out_8358142402501933144[23] = 0;
   out_8358142402501933144[24] = 0;
   out_8358142402501933144[25] = 0;
   out_8358142402501933144[26] = 0;
   out_8358142402501933144[27] = 0;
   out_8358142402501933144[28] = 0;
   out_8358142402501933144[29] = 0;
   out_8358142402501933144[30] = 0;
   out_8358142402501933144[31] = 0;
   out_8358142402501933144[32] = 0;
   out_8358142402501933144[33] = 0;
   out_8358142402501933144[34] = 0;
   out_8358142402501933144[35] = 0;
   out_8358142402501933144[36] = 0;
   out_8358142402501933144[37] = 0;
   out_8358142402501933144[38] = 0;
   out_8358142402501933144[39] = 0;
   out_8358142402501933144[40] = 0;
   out_8358142402501933144[41] = 0;
   out_8358142402501933144[42] = 0;
   out_8358142402501933144[43] = 0;
   out_8358142402501933144[44] = 1.0;
   out_8358142402501933144[45] = 0;
   out_8358142402501933144[46] = 0;
   out_8358142402501933144[47] = 0;
   out_8358142402501933144[48] = 0;
   out_8358142402501933144[49] = 0;
   out_8358142402501933144[50] = 0;
   out_8358142402501933144[51] = 0;
   out_8358142402501933144[52] = 0;
   out_8358142402501933144[53] = 0;
   out_8358142402501933144[54] = 0;
   out_8358142402501933144[55] = 0;
   out_8358142402501933144[56] = 0;
   out_8358142402501933144[57] = 0;
   out_8358142402501933144[58] = 0;
   out_8358142402501933144[59] = 0;
   out_8358142402501933144[60] = 0;
   out_8358142402501933144[61] = 0;
   out_8358142402501933144[62] = 0;
   out_8358142402501933144[63] = 0;
   out_8358142402501933144[64] = 0;
   out_8358142402501933144[65] = 0;
   out_8358142402501933144[66] = -0.5*state[4];
   out_8358142402501933144[67] = -0.5*state[5];
   out_8358142402501933144[68] = -0.5*state[6];
   out_8358142402501933144[69] = 0;
   out_8358142402501933144[70] = 0;
   out_8358142402501933144[71] = 0;
   out_8358142402501933144[72] = 0;
   out_8358142402501933144[73] = 0;
   out_8358142402501933144[74] = 0;
   out_8358142402501933144[75] = 0;
   out_8358142402501933144[76] = 0;
   out_8358142402501933144[77] = 0;
   out_8358142402501933144[78] = 0;
   out_8358142402501933144[79] = 0;
   out_8358142402501933144[80] = 0;
   out_8358142402501933144[81] = 0;
   out_8358142402501933144[82] = 0;
   out_8358142402501933144[83] = 0;
   out_8358142402501933144[84] = 0;
   out_8358142402501933144[85] = 0;
   out_8358142402501933144[86] = 0;
   out_8358142402501933144[87] = 0.5*state[3];
   out_8358142402501933144[88] = 0.5*state[6];
   out_8358142402501933144[89] = -0.5*state[5];
   out_8358142402501933144[90] = 0;
   out_8358142402501933144[91] = 0;
   out_8358142402501933144[92] = 0;
   out_8358142402501933144[93] = 0;
   out_8358142402501933144[94] = 0;
   out_8358142402501933144[95] = 0;
   out_8358142402501933144[96] = 0;
   out_8358142402501933144[97] = 0;
   out_8358142402501933144[98] = 0;
   out_8358142402501933144[99] = 0;
   out_8358142402501933144[100] = 0;
   out_8358142402501933144[101] = 0;
   out_8358142402501933144[102] = 0;
   out_8358142402501933144[103] = 0;
   out_8358142402501933144[104] = 0;
   out_8358142402501933144[105] = 0;
   out_8358142402501933144[106] = 0;
   out_8358142402501933144[107] = 0;
   out_8358142402501933144[108] = -0.5*state[6];
   out_8358142402501933144[109] = 0.5*state[3];
   out_8358142402501933144[110] = 0.5*state[4];
   out_8358142402501933144[111] = 0;
   out_8358142402501933144[112] = 0;
   out_8358142402501933144[113] = 0;
   out_8358142402501933144[114] = 0;
   out_8358142402501933144[115] = 0;
   out_8358142402501933144[116] = 0;
   out_8358142402501933144[117] = 0;
   out_8358142402501933144[118] = 0;
   out_8358142402501933144[119] = 0;
   out_8358142402501933144[120] = 0;
   out_8358142402501933144[121] = 0;
   out_8358142402501933144[122] = 0;
   out_8358142402501933144[123] = 0;
   out_8358142402501933144[124] = 0;
   out_8358142402501933144[125] = 0;
   out_8358142402501933144[126] = 0;
   out_8358142402501933144[127] = 0;
   out_8358142402501933144[128] = 0;
   out_8358142402501933144[129] = 0.5*state[5];
   out_8358142402501933144[130] = -0.5*state[4];
   out_8358142402501933144[131] = 0.5*state[3];
   out_8358142402501933144[132] = 0;
   out_8358142402501933144[133] = 0;
   out_8358142402501933144[134] = 0;
   out_8358142402501933144[135] = 0;
   out_8358142402501933144[136] = 0;
   out_8358142402501933144[137] = 0;
   out_8358142402501933144[138] = 0;
   out_8358142402501933144[139] = 0;
   out_8358142402501933144[140] = 0;
   out_8358142402501933144[141] = 0;
   out_8358142402501933144[142] = 0;
   out_8358142402501933144[143] = 0;
   out_8358142402501933144[144] = 0;
   out_8358142402501933144[145] = 0;
   out_8358142402501933144[146] = 0;
   out_8358142402501933144[147] = 0;
   out_8358142402501933144[148] = 0;
   out_8358142402501933144[149] = 0;
   out_8358142402501933144[150] = 0;
   out_8358142402501933144[151] = 0;
   out_8358142402501933144[152] = 0;
   out_8358142402501933144[153] = 1.0;
   out_8358142402501933144[154] = 0;
   out_8358142402501933144[155] = 0;
   out_8358142402501933144[156] = 0;
   out_8358142402501933144[157] = 0;
   out_8358142402501933144[158] = 0;
   out_8358142402501933144[159] = 0;
   out_8358142402501933144[160] = 0;
   out_8358142402501933144[161] = 0;
   out_8358142402501933144[162] = 0;
   out_8358142402501933144[163] = 0;
   out_8358142402501933144[164] = 0;
   out_8358142402501933144[165] = 0;
   out_8358142402501933144[166] = 0;
   out_8358142402501933144[167] = 0;
   out_8358142402501933144[168] = 0;
   out_8358142402501933144[169] = 0;
   out_8358142402501933144[170] = 0;
   out_8358142402501933144[171] = 0;
   out_8358142402501933144[172] = 0;
   out_8358142402501933144[173] = 0;
   out_8358142402501933144[174] = 0;
   out_8358142402501933144[175] = 1.0;
   out_8358142402501933144[176] = 0;
   out_8358142402501933144[177] = 0;
   out_8358142402501933144[178] = 0;
   out_8358142402501933144[179] = 0;
   out_8358142402501933144[180] = 0;
   out_8358142402501933144[181] = 0;
   out_8358142402501933144[182] = 0;
   out_8358142402501933144[183] = 0;
   out_8358142402501933144[184] = 0;
   out_8358142402501933144[185] = 0;
   out_8358142402501933144[186] = 0;
   out_8358142402501933144[187] = 0;
   out_8358142402501933144[188] = 0;
   out_8358142402501933144[189] = 0;
   out_8358142402501933144[190] = 0;
   out_8358142402501933144[191] = 0;
   out_8358142402501933144[192] = 0;
   out_8358142402501933144[193] = 0;
   out_8358142402501933144[194] = 0;
   out_8358142402501933144[195] = 0;
   out_8358142402501933144[196] = 0;
   out_8358142402501933144[197] = 1.0;
   out_8358142402501933144[198] = 0;
   out_8358142402501933144[199] = 0;
   out_8358142402501933144[200] = 0;
   out_8358142402501933144[201] = 0;
   out_8358142402501933144[202] = 0;
   out_8358142402501933144[203] = 0;
   out_8358142402501933144[204] = 0;
   out_8358142402501933144[205] = 0;
   out_8358142402501933144[206] = 0;
   out_8358142402501933144[207] = 0;
   out_8358142402501933144[208] = 0;
   out_8358142402501933144[209] = 0;
   out_8358142402501933144[210] = 0;
   out_8358142402501933144[211] = 0;
   out_8358142402501933144[212] = 0;
   out_8358142402501933144[213] = 0;
   out_8358142402501933144[214] = 0;
   out_8358142402501933144[215] = 0;
   out_8358142402501933144[216] = 0;
   out_8358142402501933144[217] = 0;
   out_8358142402501933144[218] = 0;
   out_8358142402501933144[219] = 1.0;
   out_8358142402501933144[220] = 0;
   out_8358142402501933144[221] = 0;
   out_8358142402501933144[222] = 0;
   out_8358142402501933144[223] = 0;
   out_8358142402501933144[224] = 0;
   out_8358142402501933144[225] = 0;
   out_8358142402501933144[226] = 0;
   out_8358142402501933144[227] = 0;
   out_8358142402501933144[228] = 0;
   out_8358142402501933144[229] = 0;
   out_8358142402501933144[230] = 0;
   out_8358142402501933144[231] = 0;
   out_8358142402501933144[232] = 0;
   out_8358142402501933144[233] = 0;
   out_8358142402501933144[234] = 0;
   out_8358142402501933144[235] = 0;
   out_8358142402501933144[236] = 0;
   out_8358142402501933144[237] = 0;
   out_8358142402501933144[238] = 0;
   out_8358142402501933144[239] = 0;
   out_8358142402501933144[240] = 0;
   out_8358142402501933144[241] = 1.0;
   out_8358142402501933144[242] = 0;
   out_8358142402501933144[243] = 0;
   out_8358142402501933144[244] = 0;
   out_8358142402501933144[245] = 0;
   out_8358142402501933144[246] = 0;
   out_8358142402501933144[247] = 0;
   out_8358142402501933144[248] = 0;
   out_8358142402501933144[249] = 0;
   out_8358142402501933144[250] = 0;
   out_8358142402501933144[251] = 0;
   out_8358142402501933144[252] = 0;
   out_8358142402501933144[253] = 0;
   out_8358142402501933144[254] = 0;
   out_8358142402501933144[255] = 0;
   out_8358142402501933144[256] = 0;
   out_8358142402501933144[257] = 0;
   out_8358142402501933144[258] = 0;
   out_8358142402501933144[259] = 0;
   out_8358142402501933144[260] = 0;
   out_8358142402501933144[261] = 0;
   out_8358142402501933144[262] = 0;
   out_8358142402501933144[263] = 1.0;
   out_8358142402501933144[264] = 0;
   out_8358142402501933144[265] = 0;
   out_8358142402501933144[266] = 0;
   out_8358142402501933144[267] = 0;
   out_8358142402501933144[268] = 0;
   out_8358142402501933144[269] = 0;
   out_8358142402501933144[270] = 0;
   out_8358142402501933144[271] = 0;
   out_8358142402501933144[272] = 0;
   out_8358142402501933144[273] = 0;
   out_8358142402501933144[274] = 0;
   out_8358142402501933144[275] = 0;
   out_8358142402501933144[276] = 0;
   out_8358142402501933144[277] = 0;
   out_8358142402501933144[278] = 0;
   out_8358142402501933144[279] = 0;
   out_8358142402501933144[280] = 0;
   out_8358142402501933144[281] = 0;
   out_8358142402501933144[282] = 0;
   out_8358142402501933144[283] = 0;
   out_8358142402501933144[284] = 0;
   out_8358142402501933144[285] = 1.0;
   out_8358142402501933144[286] = 0;
   out_8358142402501933144[287] = 0;
   out_8358142402501933144[288] = 0;
   out_8358142402501933144[289] = 0;
   out_8358142402501933144[290] = 0;
   out_8358142402501933144[291] = 0;
   out_8358142402501933144[292] = 0;
   out_8358142402501933144[293] = 0;
   out_8358142402501933144[294] = 0;
   out_8358142402501933144[295] = 0;
   out_8358142402501933144[296] = 0;
   out_8358142402501933144[297] = 0;
   out_8358142402501933144[298] = 0;
   out_8358142402501933144[299] = 0;
   out_8358142402501933144[300] = 0;
   out_8358142402501933144[301] = 0;
   out_8358142402501933144[302] = 0;
   out_8358142402501933144[303] = 0;
   out_8358142402501933144[304] = 0;
   out_8358142402501933144[305] = 0;
   out_8358142402501933144[306] = 0;
   out_8358142402501933144[307] = 1.0;
   out_8358142402501933144[308] = 0;
   out_8358142402501933144[309] = 0;
   out_8358142402501933144[310] = 0;
   out_8358142402501933144[311] = 0;
   out_8358142402501933144[312] = 0;
   out_8358142402501933144[313] = 0;
   out_8358142402501933144[314] = 0;
   out_8358142402501933144[315] = 0;
   out_8358142402501933144[316] = 0;
   out_8358142402501933144[317] = 0;
   out_8358142402501933144[318] = 0;
   out_8358142402501933144[319] = 0;
   out_8358142402501933144[320] = 0;
   out_8358142402501933144[321] = 0;
   out_8358142402501933144[322] = 0;
   out_8358142402501933144[323] = 0;
   out_8358142402501933144[324] = 0;
   out_8358142402501933144[325] = 0;
   out_8358142402501933144[326] = 0;
   out_8358142402501933144[327] = 0;
   out_8358142402501933144[328] = 0;
   out_8358142402501933144[329] = 1.0;
   out_8358142402501933144[330] = 0;
   out_8358142402501933144[331] = 0;
   out_8358142402501933144[332] = 0;
   out_8358142402501933144[333] = 0;
   out_8358142402501933144[334] = 0;
   out_8358142402501933144[335] = 0;
   out_8358142402501933144[336] = 0;
   out_8358142402501933144[337] = 0;
   out_8358142402501933144[338] = 0;
   out_8358142402501933144[339] = 0;
   out_8358142402501933144[340] = 0;
   out_8358142402501933144[341] = 0;
   out_8358142402501933144[342] = 0;
   out_8358142402501933144[343] = 0;
   out_8358142402501933144[344] = 0;
   out_8358142402501933144[345] = 0;
   out_8358142402501933144[346] = 0;
   out_8358142402501933144[347] = 0;
   out_8358142402501933144[348] = 0;
   out_8358142402501933144[349] = 0;
   out_8358142402501933144[350] = 0;
   out_8358142402501933144[351] = 1.0;
   out_8358142402501933144[352] = 0;
   out_8358142402501933144[353] = 0;
   out_8358142402501933144[354] = 0;
   out_8358142402501933144[355] = 0;
   out_8358142402501933144[356] = 0;
   out_8358142402501933144[357] = 0;
   out_8358142402501933144[358] = 0;
   out_8358142402501933144[359] = 0;
   out_8358142402501933144[360] = 0;
   out_8358142402501933144[361] = 0;
   out_8358142402501933144[362] = 0;
   out_8358142402501933144[363] = 0;
   out_8358142402501933144[364] = 0;
   out_8358142402501933144[365] = 0;
   out_8358142402501933144[366] = 0;
   out_8358142402501933144[367] = 0;
   out_8358142402501933144[368] = 0;
   out_8358142402501933144[369] = 0;
   out_8358142402501933144[370] = 0;
   out_8358142402501933144[371] = 0;
   out_8358142402501933144[372] = 0;
   out_8358142402501933144[373] = 1.0;
   out_8358142402501933144[374] = 0;
   out_8358142402501933144[375] = 0;
   out_8358142402501933144[376] = 0;
   out_8358142402501933144[377] = 0;
   out_8358142402501933144[378] = 0;
   out_8358142402501933144[379] = 0;
   out_8358142402501933144[380] = 0;
   out_8358142402501933144[381] = 0;
   out_8358142402501933144[382] = 0;
   out_8358142402501933144[383] = 0;
   out_8358142402501933144[384] = 0;
   out_8358142402501933144[385] = 0;
   out_8358142402501933144[386] = 0;
   out_8358142402501933144[387] = 0;
   out_8358142402501933144[388] = 0;
   out_8358142402501933144[389] = 0;
   out_8358142402501933144[390] = 0;
   out_8358142402501933144[391] = 0;
   out_8358142402501933144[392] = 0;
   out_8358142402501933144[393] = 0;
   out_8358142402501933144[394] = 0;
   out_8358142402501933144[395] = 1.0;
   out_8358142402501933144[396] = 0;
   out_8358142402501933144[397] = 0;
   out_8358142402501933144[398] = 0;
   out_8358142402501933144[399] = 0;
   out_8358142402501933144[400] = 0;
   out_8358142402501933144[401] = 0;
   out_8358142402501933144[402] = 0;
   out_8358142402501933144[403] = 0;
   out_8358142402501933144[404] = 0;
   out_8358142402501933144[405] = 0;
   out_8358142402501933144[406] = 0;
   out_8358142402501933144[407] = 0;
   out_8358142402501933144[408] = 0;
   out_8358142402501933144[409] = 0;
   out_8358142402501933144[410] = 0;
   out_8358142402501933144[411] = 0;
   out_8358142402501933144[412] = 0;
   out_8358142402501933144[413] = 0;
   out_8358142402501933144[414] = 0;
   out_8358142402501933144[415] = 0;
   out_8358142402501933144[416] = 0;
   out_8358142402501933144[417] = 1.0;
   out_8358142402501933144[418] = 0;
   out_8358142402501933144[419] = 0;
   out_8358142402501933144[420] = 0;
   out_8358142402501933144[421] = 0;
   out_8358142402501933144[422] = 0;
   out_8358142402501933144[423] = 0;
   out_8358142402501933144[424] = 0;
   out_8358142402501933144[425] = 0;
   out_8358142402501933144[426] = 0;
   out_8358142402501933144[427] = 0;
   out_8358142402501933144[428] = 0;
   out_8358142402501933144[429] = 0;
   out_8358142402501933144[430] = 0;
   out_8358142402501933144[431] = 0;
   out_8358142402501933144[432] = 0;
   out_8358142402501933144[433] = 0;
   out_8358142402501933144[434] = 0;
   out_8358142402501933144[435] = 0;
   out_8358142402501933144[436] = 0;
   out_8358142402501933144[437] = 0;
   out_8358142402501933144[438] = 0;
   out_8358142402501933144[439] = 1.0;
   out_8358142402501933144[440] = 0;
   out_8358142402501933144[441] = 0;
   out_8358142402501933144[442] = 0;
   out_8358142402501933144[443] = 0;
   out_8358142402501933144[444] = 0;
   out_8358142402501933144[445] = 0;
   out_8358142402501933144[446] = 0;
   out_8358142402501933144[447] = 0;
   out_8358142402501933144[448] = 0;
   out_8358142402501933144[449] = 0;
   out_8358142402501933144[450] = 0;
   out_8358142402501933144[451] = 0;
   out_8358142402501933144[452] = 0;
   out_8358142402501933144[453] = 0;
   out_8358142402501933144[454] = 0;
   out_8358142402501933144[455] = 0;
   out_8358142402501933144[456] = 0;
   out_8358142402501933144[457] = 0;
   out_8358142402501933144[458] = 0;
   out_8358142402501933144[459] = 0;
   out_8358142402501933144[460] = 0;
   out_8358142402501933144[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8210762158604147154) {
   out_8210762158604147154[0] = dt*state[7] + state[0];
   out_8210762158604147154[1] = dt*state[8] + state[1];
   out_8210762158604147154[2] = dt*state[9] + state[2];
   out_8210762158604147154[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8210762158604147154[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8210762158604147154[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8210762158604147154[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8210762158604147154[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8210762158604147154[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8210762158604147154[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8210762158604147154[10] = state[10];
   out_8210762158604147154[11] = state[11];
   out_8210762158604147154[12] = state[12];
   out_8210762158604147154[13] = state[13];
   out_8210762158604147154[14] = state[14];
   out_8210762158604147154[15] = state[15];
   out_8210762158604147154[16] = state[16];
   out_8210762158604147154[17] = state[17];
   out_8210762158604147154[18] = state[18];
   out_8210762158604147154[19] = state[19];
   out_8210762158604147154[20] = state[20];
   out_8210762158604147154[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2457475553137628519) {
   out_2457475553137628519[0] = 1;
   out_2457475553137628519[1] = 0;
   out_2457475553137628519[2] = 0;
   out_2457475553137628519[3] = 0;
   out_2457475553137628519[4] = 0;
   out_2457475553137628519[5] = 0;
   out_2457475553137628519[6] = dt;
   out_2457475553137628519[7] = 0;
   out_2457475553137628519[8] = 0;
   out_2457475553137628519[9] = 0;
   out_2457475553137628519[10] = 0;
   out_2457475553137628519[11] = 0;
   out_2457475553137628519[12] = 0;
   out_2457475553137628519[13] = 0;
   out_2457475553137628519[14] = 0;
   out_2457475553137628519[15] = 0;
   out_2457475553137628519[16] = 0;
   out_2457475553137628519[17] = 0;
   out_2457475553137628519[18] = 0;
   out_2457475553137628519[19] = 0;
   out_2457475553137628519[20] = 0;
   out_2457475553137628519[21] = 0;
   out_2457475553137628519[22] = 1;
   out_2457475553137628519[23] = 0;
   out_2457475553137628519[24] = 0;
   out_2457475553137628519[25] = 0;
   out_2457475553137628519[26] = 0;
   out_2457475553137628519[27] = 0;
   out_2457475553137628519[28] = dt;
   out_2457475553137628519[29] = 0;
   out_2457475553137628519[30] = 0;
   out_2457475553137628519[31] = 0;
   out_2457475553137628519[32] = 0;
   out_2457475553137628519[33] = 0;
   out_2457475553137628519[34] = 0;
   out_2457475553137628519[35] = 0;
   out_2457475553137628519[36] = 0;
   out_2457475553137628519[37] = 0;
   out_2457475553137628519[38] = 0;
   out_2457475553137628519[39] = 0;
   out_2457475553137628519[40] = 0;
   out_2457475553137628519[41] = 0;
   out_2457475553137628519[42] = 0;
   out_2457475553137628519[43] = 0;
   out_2457475553137628519[44] = 1;
   out_2457475553137628519[45] = 0;
   out_2457475553137628519[46] = 0;
   out_2457475553137628519[47] = 0;
   out_2457475553137628519[48] = 0;
   out_2457475553137628519[49] = 0;
   out_2457475553137628519[50] = dt;
   out_2457475553137628519[51] = 0;
   out_2457475553137628519[52] = 0;
   out_2457475553137628519[53] = 0;
   out_2457475553137628519[54] = 0;
   out_2457475553137628519[55] = 0;
   out_2457475553137628519[56] = 0;
   out_2457475553137628519[57] = 0;
   out_2457475553137628519[58] = 0;
   out_2457475553137628519[59] = 0;
   out_2457475553137628519[60] = 0;
   out_2457475553137628519[61] = 0;
   out_2457475553137628519[62] = 0;
   out_2457475553137628519[63] = 0;
   out_2457475553137628519[64] = 0;
   out_2457475553137628519[65] = 0;
   out_2457475553137628519[66] = 1;
   out_2457475553137628519[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2457475553137628519[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2457475553137628519[69] = 0;
   out_2457475553137628519[70] = 0;
   out_2457475553137628519[71] = 0;
   out_2457475553137628519[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2457475553137628519[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2457475553137628519[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2457475553137628519[75] = 0;
   out_2457475553137628519[76] = 0;
   out_2457475553137628519[77] = 0;
   out_2457475553137628519[78] = 0;
   out_2457475553137628519[79] = 0;
   out_2457475553137628519[80] = 0;
   out_2457475553137628519[81] = 0;
   out_2457475553137628519[82] = 0;
   out_2457475553137628519[83] = 0;
   out_2457475553137628519[84] = 0;
   out_2457475553137628519[85] = 0;
   out_2457475553137628519[86] = 0;
   out_2457475553137628519[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2457475553137628519[88] = 1;
   out_2457475553137628519[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2457475553137628519[90] = 0;
   out_2457475553137628519[91] = 0;
   out_2457475553137628519[92] = 0;
   out_2457475553137628519[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2457475553137628519[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2457475553137628519[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2457475553137628519[96] = 0;
   out_2457475553137628519[97] = 0;
   out_2457475553137628519[98] = 0;
   out_2457475553137628519[99] = 0;
   out_2457475553137628519[100] = 0;
   out_2457475553137628519[101] = 0;
   out_2457475553137628519[102] = 0;
   out_2457475553137628519[103] = 0;
   out_2457475553137628519[104] = 0;
   out_2457475553137628519[105] = 0;
   out_2457475553137628519[106] = 0;
   out_2457475553137628519[107] = 0;
   out_2457475553137628519[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2457475553137628519[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2457475553137628519[110] = 1;
   out_2457475553137628519[111] = 0;
   out_2457475553137628519[112] = 0;
   out_2457475553137628519[113] = 0;
   out_2457475553137628519[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2457475553137628519[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2457475553137628519[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2457475553137628519[117] = 0;
   out_2457475553137628519[118] = 0;
   out_2457475553137628519[119] = 0;
   out_2457475553137628519[120] = 0;
   out_2457475553137628519[121] = 0;
   out_2457475553137628519[122] = 0;
   out_2457475553137628519[123] = 0;
   out_2457475553137628519[124] = 0;
   out_2457475553137628519[125] = 0;
   out_2457475553137628519[126] = 0;
   out_2457475553137628519[127] = 0;
   out_2457475553137628519[128] = 0;
   out_2457475553137628519[129] = 0;
   out_2457475553137628519[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2457475553137628519[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2457475553137628519[132] = 1;
   out_2457475553137628519[133] = 0;
   out_2457475553137628519[134] = 0;
   out_2457475553137628519[135] = 0;
   out_2457475553137628519[136] = 0;
   out_2457475553137628519[137] = 0;
   out_2457475553137628519[138] = 0;
   out_2457475553137628519[139] = 0;
   out_2457475553137628519[140] = 0;
   out_2457475553137628519[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2457475553137628519[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2457475553137628519[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2457475553137628519[144] = 0;
   out_2457475553137628519[145] = 0;
   out_2457475553137628519[146] = 0;
   out_2457475553137628519[147] = 0;
   out_2457475553137628519[148] = 0;
   out_2457475553137628519[149] = 0;
   out_2457475553137628519[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2457475553137628519[151] = 0;
   out_2457475553137628519[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2457475553137628519[153] = 0;
   out_2457475553137628519[154] = 1;
   out_2457475553137628519[155] = 0;
   out_2457475553137628519[156] = 0;
   out_2457475553137628519[157] = 0;
   out_2457475553137628519[158] = 0;
   out_2457475553137628519[159] = 0;
   out_2457475553137628519[160] = 0;
   out_2457475553137628519[161] = 0;
   out_2457475553137628519[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2457475553137628519[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2457475553137628519[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2457475553137628519[165] = 0;
   out_2457475553137628519[166] = 0;
   out_2457475553137628519[167] = 0;
   out_2457475553137628519[168] = 0;
   out_2457475553137628519[169] = 0;
   out_2457475553137628519[170] = 0;
   out_2457475553137628519[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2457475553137628519[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2457475553137628519[173] = 0;
   out_2457475553137628519[174] = 0;
   out_2457475553137628519[175] = 0;
   out_2457475553137628519[176] = 1;
   out_2457475553137628519[177] = 0;
   out_2457475553137628519[178] = 0;
   out_2457475553137628519[179] = 0;
   out_2457475553137628519[180] = 0;
   out_2457475553137628519[181] = 0;
   out_2457475553137628519[182] = 0;
   out_2457475553137628519[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2457475553137628519[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2457475553137628519[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2457475553137628519[186] = 0;
   out_2457475553137628519[187] = 0;
   out_2457475553137628519[188] = 0;
   out_2457475553137628519[189] = 0;
   out_2457475553137628519[190] = 0;
   out_2457475553137628519[191] = 0;
   out_2457475553137628519[192] = 0;
   out_2457475553137628519[193] = 0;
   out_2457475553137628519[194] = 0;
   out_2457475553137628519[195] = 0;
   out_2457475553137628519[196] = 0;
   out_2457475553137628519[197] = 0;
   out_2457475553137628519[198] = 1;
   out_2457475553137628519[199] = 0;
   out_2457475553137628519[200] = 0;
   out_2457475553137628519[201] = 0;
   out_2457475553137628519[202] = 0;
   out_2457475553137628519[203] = 0;
   out_2457475553137628519[204] = 0;
   out_2457475553137628519[205] = 0;
   out_2457475553137628519[206] = 0;
   out_2457475553137628519[207] = 0;
   out_2457475553137628519[208] = 0;
   out_2457475553137628519[209] = 0;
   out_2457475553137628519[210] = 0;
   out_2457475553137628519[211] = 0;
   out_2457475553137628519[212] = 0;
   out_2457475553137628519[213] = 0;
   out_2457475553137628519[214] = 0;
   out_2457475553137628519[215] = 0;
   out_2457475553137628519[216] = 0;
   out_2457475553137628519[217] = 0;
   out_2457475553137628519[218] = 0;
   out_2457475553137628519[219] = 0;
   out_2457475553137628519[220] = 1;
   out_2457475553137628519[221] = 0;
   out_2457475553137628519[222] = 0;
   out_2457475553137628519[223] = 0;
   out_2457475553137628519[224] = 0;
   out_2457475553137628519[225] = 0;
   out_2457475553137628519[226] = 0;
   out_2457475553137628519[227] = 0;
   out_2457475553137628519[228] = 0;
   out_2457475553137628519[229] = 0;
   out_2457475553137628519[230] = 0;
   out_2457475553137628519[231] = 0;
   out_2457475553137628519[232] = 0;
   out_2457475553137628519[233] = 0;
   out_2457475553137628519[234] = 0;
   out_2457475553137628519[235] = 0;
   out_2457475553137628519[236] = 0;
   out_2457475553137628519[237] = 0;
   out_2457475553137628519[238] = 0;
   out_2457475553137628519[239] = 0;
   out_2457475553137628519[240] = 0;
   out_2457475553137628519[241] = 0;
   out_2457475553137628519[242] = 1;
   out_2457475553137628519[243] = 0;
   out_2457475553137628519[244] = 0;
   out_2457475553137628519[245] = 0;
   out_2457475553137628519[246] = 0;
   out_2457475553137628519[247] = 0;
   out_2457475553137628519[248] = 0;
   out_2457475553137628519[249] = 0;
   out_2457475553137628519[250] = 0;
   out_2457475553137628519[251] = 0;
   out_2457475553137628519[252] = 0;
   out_2457475553137628519[253] = 0;
   out_2457475553137628519[254] = 0;
   out_2457475553137628519[255] = 0;
   out_2457475553137628519[256] = 0;
   out_2457475553137628519[257] = 0;
   out_2457475553137628519[258] = 0;
   out_2457475553137628519[259] = 0;
   out_2457475553137628519[260] = 0;
   out_2457475553137628519[261] = 0;
   out_2457475553137628519[262] = 0;
   out_2457475553137628519[263] = 0;
   out_2457475553137628519[264] = 1;
   out_2457475553137628519[265] = 0;
   out_2457475553137628519[266] = 0;
   out_2457475553137628519[267] = 0;
   out_2457475553137628519[268] = 0;
   out_2457475553137628519[269] = 0;
   out_2457475553137628519[270] = 0;
   out_2457475553137628519[271] = 0;
   out_2457475553137628519[272] = 0;
   out_2457475553137628519[273] = 0;
   out_2457475553137628519[274] = 0;
   out_2457475553137628519[275] = 0;
   out_2457475553137628519[276] = 0;
   out_2457475553137628519[277] = 0;
   out_2457475553137628519[278] = 0;
   out_2457475553137628519[279] = 0;
   out_2457475553137628519[280] = 0;
   out_2457475553137628519[281] = 0;
   out_2457475553137628519[282] = 0;
   out_2457475553137628519[283] = 0;
   out_2457475553137628519[284] = 0;
   out_2457475553137628519[285] = 0;
   out_2457475553137628519[286] = 1;
   out_2457475553137628519[287] = 0;
   out_2457475553137628519[288] = 0;
   out_2457475553137628519[289] = 0;
   out_2457475553137628519[290] = 0;
   out_2457475553137628519[291] = 0;
   out_2457475553137628519[292] = 0;
   out_2457475553137628519[293] = 0;
   out_2457475553137628519[294] = 0;
   out_2457475553137628519[295] = 0;
   out_2457475553137628519[296] = 0;
   out_2457475553137628519[297] = 0;
   out_2457475553137628519[298] = 0;
   out_2457475553137628519[299] = 0;
   out_2457475553137628519[300] = 0;
   out_2457475553137628519[301] = 0;
   out_2457475553137628519[302] = 0;
   out_2457475553137628519[303] = 0;
   out_2457475553137628519[304] = 0;
   out_2457475553137628519[305] = 0;
   out_2457475553137628519[306] = 0;
   out_2457475553137628519[307] = 0;
   out_2457475553137628519[308] = 1;
   out_2457475553137628519[309] = 0;
   out_2457475553137628519[310] = 0;
   out_2457475553137628519[311] = 0;
   out_2457475553137628519[312] = 0;
   out_2457475553137628519[313] = 0;
   out_2457475553137628519[314] = 0;
   out_2457475553137628519[315] = 0;
   out_2457475553137628519[316] = 0;
   out_2457475553137628519[317] = 0;
   out_2457475553137628519[318] = 0;
   out_2457475553137628519[319] = 0;
   out_2457475553137628519[320] = 0;
   out_2457475553137628519[321] = 0;
   out_2457475553137628519[322] = 0;
   out_2457475553137628519[323] = 0;
   out_2457475553137628519[324] = 0;
   out_2457475553137628519[325] = 0;
   out_2457475553137628519[326] = 0;
   out_2457475553137628519[327] = 0;
   out_2457475553137628519[328] = 0;
   out_2457475553137628519[329] = 0;
   out_2457475553137628519[330] = 1;
   out_2457475553137628519[331] = 0;
   out_2457475553137628519[332] = 0;
   out_2457475553137628519[333] = 0;
   out_2457475553137628519[334] = 0;
   out_2457475553137628519[335] = 0;
   out_2457475553137628519[336] = 0;
   out_2457475553137628519[337] = 0;
   out_2457475553137628519[338] = 0;
   out_2457475553137628519[339] = 0;
   out_2457475553137628519[340] = 0;
   out_2457475553137628519[341] = 0;
   out_2457475553137628519[342] = 0;
   out_2457475553137628519[343] = 0;
   out_2457475553137628519[344] = 0;
   out_2457475553137628519[345] = 0;
   out_2457475553137628519[346] = 0;
   out_2457475553137628519[347] = 0;
   out_2457475553137628519[348] = 0;
   out_2457475553137628519[349] = 0;
   out_2457475553137628519[350] = 0;
   out_2457475553137628519[351] = 0;
   out_2457475553137628519[352] = 1;
   out_2457475553137628519[353] = 0;
   out_2457475553137628519[354] = 0;
   out_2457475553137628519[355] = 0;
   out_2457475553137628519[356] = 0;
   out_2457475553137628519[357] = 0;
   out_2457475553137628519[358] = 0;
   out_2457475553137628519[359] = 0;
   out_2457475553137628519[360] = 0;
   out_2457475553137628519[361] = 0;
   out_2457475553137628519[362] = 0;
   out_2457475553137628519[363] = 0;
   out_2457475553137628519[364] = 0;
   out_2457475553137628519[365] = 0;
   out_2457475553137628519[366] = 0;
   out_2457475553137628519[367] = 0;
   out_2457475553137628519[368] = 0;
   out_2457475553137628519[369] = 0;
   out_2457475553137628519[370] = 0;
   out_2457475553137628519[371] = 0;
   out_2457475553137628519[372] = 0;
   out_2457475553137628519[373] = 0;
   out_2457475553137628519[374] = 1;
   out_2457475553137628519[375] = 0;
   out_2457475553137628519[376] = 0;
   out_2457475553137628519[377] = 0;
   out_2457475553137628519[378] = 0;
   out_2457475553137628519[379] = 0;
   out_2457475553137628519[380] = 0;
   out_2457475553137628519[381] = 0;
   out_2457475553137628519[382] = 0;
   out_2457475553137628519[383] = 0;
   out_2457475553137628519[384] = 0;
   out_2457475553137628519[385] = 0;
   out_2457475553137628519[386] = 0;
   out_2457475553137628519[387] = 0;
   out_2457475553137628519[388] = 0;
   out_2457475553137628519[389] = 0;
   out_2457475553137628519[390] = 0;
   out_2457475553137628519[391] = 0;
   out_2457475553137628519[392] = 0;
   out_2457475553137628519[393] = 0;
   out_2457475553137628519[394] = 0;
   out_2457475553137628519[395] = 0;
   out_2457475553137628519[396] = 1;
   out_2457475553137628519[397] = 0;
   out_2457475553137628519[398] = 0;
   out_2457475553137628519[399] = 0;
   out_2457475553137628519[400] = 0;
   out_2457475553137628519[401] = 0;
   out_2457475553137628519[402] = 0;
   out_2457475553137628519[403] = 0;
   out_2457475553137628519[404] = 0;
   out_2457475553137628519[405] = 0;
   out_2457475553137628519[406] = 0;
   out_2457475553137628519[407] = 0;
   out_2457475553137628519[408] = 0;
   out_2457475553137628519[409] = 0;
   out_2457475553137628519[410] = 0;
   out_2457475553137628519[411] = 0;
   out_2457475553137628519[412] = 0;
   out_2457475553137628519[413] = 0;
   out_2457475553137628519[414] = 0;
   out_2457475553137628519[415] = 0;
   out_2457475553137628519[416] = 0;
   out_2457475553137628519[417] = 0;
   out_2457475553137628519[418] = 1;
   out_2457475553137628519[419] = 0;
   out_2457475553137628519[420] = 0;
   out_2457475553137628519[421] = 0;
   out_2457475553137628519[422] = 0;
   out_2457475553137628519[423] = 0;
   out_2457475553137628519[424] = 0;
   out_2457475553137628519[425] = 0;
   out_2457475553137628519[426] = 0;
   out_2457475553137628519[427] = 0;
   out_2457475553137628519[428] = 0;
   out_2457475553137628519[429] = 0;
   out_2457475553137628519[430] = 0;
   out_2457475553137628519[431] = 0;
   out_2457475553137628519[432] = 0;
   out_2457475553137628519[433] = 0;
   out_2457475553137628519[434] = 0;
   out_2457475553137628519[435] = 0;
   out_2457475553137628519[436] = 0;
   out_2457475553137628519[437] = 0;
   out_2457475553137628519[438] = 0;
   out_2457475553137628519[439] = 0;
   out_2457475553137628519[440] = 1;
}
void h_4(double *state, double *unused, double *out_7478004446258192637) {
   out_7478004446258192637[0] = state[10] + state[13];
   out_7478004446258192637[1] = state[11] + state[14];
   out_7478004446258192637[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3268929401193690479) {
   out_3268929401193690479[0] = 0;
   out_3268929401193690479[1] = 0;
   out_3268929401193690479[2] = 0;
   out_3268929401193690479[3] = 0;
   out_3268929401193690479[4] = 0;
   out_3268929401193690479[5] = 0;
   out_3268929401193690479[6] = 0;
   out_3268929401193690479[7] = 0;
   out_3268929401193690479[8] = 0;
   out_3268929401193690479[9] = 0;
   out_3268929401193690479[10] = 1;
   out_3268929401193690479[11] = 0;
   out_3268929401193690479[12] = 0;
   out_3268929401193690479[13] = 1;
   out_3268929401193690479[14] = 0;
   out_3268929401193690479[15] = 0;
   out_3268929401193690479[16] = 0;
   out_3268929401193690479[17] = 0;
   out_3268929401193690479[18] = 0;
   out_3268929401193690479[19] = 0;
   out_3268929401193690479[20] = 0;
   out_3268929401193690479[21] = 0;
   out_3268929401193690479[22] = 0;
   out_3268929401193690479[23] = 0;
   out_3268929401193690479[24] = 0;
   out_3268929401193690479[25] = 0;
   out_3268929401193690479[26] = 0;
   out_3268929401193690479[27] = 0;
   out_3268929401193690479[28] = 0;
   out_3268929401193690479[29] = 0;
   out_3268929401193690479[30] = 0;
   out_3268929401193690479[31] = 0;
   out_3268929401193690479[32] = 0;
   out_3268929401193690479[33] = 1;
   out_3268929401193690479[34] = 0;
   out_3268929401193690479[35] = 0;
   out_3268929401193690479[36] = 1;
   out_3268929401193690479[37] = 0;
   out_3268929401193690479[38] = 0;
   out_3268929401193690479[39] = 0;
   out_3268929401193690479[40] = 0;
   out_3268929401193690479[41] = 0;
   out_3268929401193690479[42] = 0;
   out_3268929401193690479[43] = 0;
   out_3268929401193690479[44] = 0;
   out_3268929401193690479[45] = 0;
   out_3268929401193690479[46] = 0;
   out_3268929401193690479[47] = 0;
   out_3268929401193690479[48] = 0;
   out_3268929401193690479[49] = 0;
   out_3268929401193690479[50] = 0;
   out_3268929401193690479[51] = 0;
   out_3268929401193690479[52] = 0;
   out_3268929401193690479[53] = 0;
   out_3268929401193690479[54] = 0;
   out_3268929401193690479[55] = 0;
   out_3268929401193690479[56] = 1;
   out_3268929401193690479[57] = 0;
   out_3268929401193690479[58] = 0;
   out_3268929401193690479[59] = 1;
   out_3268929401193690479[60] = 0;
   out_3268929401193690479[61] = 0;
   out_3268929401193690479[62] = 0;
   out_3268929401193690479[63] = 0;
   out_3268929401193690479[64] = 0;
   out_3268929401193690479[65] = 0;
}
void h_9(double *state, double *unused, double *out_4165312183178748366) {
   out_4165312183178748366[0] = state[10];
   out_4165312183178748366[1] = state[11];
   out_4165312183178748366[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7890595737251413667) {
   out_7890595737251413667[0] = 0;
   out_7890595737251413667[1] = 0;
   out_7890595737251413667[2] = 0;
   out_7890595737251413667[3] = 0;
   out_7890595737251413667[4] = 0;
   out_7890595737251413667[5] = 0;
   out_7890595737251413667[6] = 0;
   out_7890595737251413667[7] = 0;
   out_7890595737251413667[8] = 0;
   out_7890595737251413667[9] = 0;
   out_7890595737251413667[10] = 1;
   out_7890595737251413667[11] = 0;
   out_7890595737251413667[12] = 0;
   out_7890595737251413667[13] = 0;
   out_7890595737251413667[14] = 0;
   out_7890595737251413667[15] = 0;
   out_7890595737251413667[16] = 0;
   out_7890595737251413667[17] = 0;
   out_7890595737251413667[18] = 0;
   out_7890595737251413667[19] = 0;
   out_7890595737251413667[20] = 0;
   out_7890595737251413667[21] = 0;
   out_7890595737251413667[22] = 0;
   out_7890595737251413667[23] = 0;
   out_7890595737251413667[24] = 0;
   out_7890595737251413667[25] = 0;
   out_7890595737251413667[26] = 0;
   out_7890595737251413667[27] = 0;
   out_7890595737251413667[28] = 0;
   out_7890595737251413667[29] = 0;
   out_7890595737251413667[30] = 0;
   out_7890595737251413667[31] = 0;
   out_7890595737251413667[32] = 0;
   out_7890595737251413667[33] = 1;
   out_7890595737251413667[34] = 0;
   out_7890595737251413667[35] = 0;
   out_7890595737251413667[36] = 0;
   out_7890595737251413667[37] = 0;
   out_7890595737251413667[38] = 0;
   out_7890595737251413667[39] = 0;
   out_7890595737251413667[40] = 0;
   out_7890595737251413667[41] = 0;
   out_7890595737251413667[42] = 0;
   out_7890595737251413667[43] = 0;
   out_7890595737251413667[44] = 0;
   out_7890595737251413667[45] = 0;
   out_7890595737251413667[46] = 0;
   out_7890595737251413667[47] = 0;
   out_7890595737251413667[48] = 0;
   out_7890595737251413667[49] = 0;
   out_7890595737251413667[50] = 0;
   out_7890595737251413667[51] = 0;
   out_7890595737251413667[52] = 0;
   out_7890595737251413667[53] = 0;
   out_7890595737251413667[54] = 0;
   out_7890595737251413667[55] = 0;
   out_7890595737251413667[56] = 1;
   out_7890595737251413667[57] = 0;
   out_7890595737251413667[58] = 0;
   out_7890595737251413667[59] = 0;
   out_7890595737251413667[60] = 0;
   out_7890595737251413667[61] = 0;
   out_7890595737251413667[62] = 0;
   out_7890595737251413667[63] = 0;
   out_7890595737251413667[64] = 0;
   out_7890595737251413667[65] = 0;
}
void h_10(double *state, double *unused, double *out_1153847551310806058) {
   out_1153847551310806058[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1153847551310806058[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1153847551310806058[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6310129250639465020) {
   out_6310129250639465020[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6310129250639465020[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6310129250639465020[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6310129250639465020[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6310129250639465020[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6310129250639465020[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6310129250639465020[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6310129250639465020[7] = 0;
   out_6310129250639465020[8] = 0;
   out_6310129250639465020[9] = 0;
   out_6310129250639465020[10] = 0;
   out_6310129250639465020[11] = 0;
   out_6310129250639465020[12] = 0;
   out_6310129250639465020[13] = 0;
   out_6310129250639465020[14] = 0;
   out_6310129250639465020[15] = 0;
   out_6310129250639465020[16] = 1;
   out_6310129250639465020[17] = 0;
   out_6310129250639465020[18] = 0;
   out_6310129250639465020[19] = 1;
   out_6310129250639465020[20] = 0;
   out_6310129250639465020[21] = 0;
   out_6310129250639465020[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6310129250639465020[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6310129250639465020[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6310129250639465020[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6310129250639465020[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6310129250639465020[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6310129250639465020[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6310129250639465020[29] = 0;
   out_6310129250639465020[30] = 0;
   out_6310129250639465020[31] = 0;
   out_6310129250639465020[32] = 0;
   out_6310129250639465020[33] = 0;
   out_6310129250639465020[34] = 0;
   out_6310129250639465020[35] = 0;
   out_6310129250639465020[36] = 0;
   out_6310129250639465020[37] = 0;
   out_6310129250639465020[38] = 0;
   out_6310129250639465020[39] = 1;
   out_6310129250639465020[40] = 0;
   out_6310129250639465020[41] = 0;
   out_6310129250639465020[42] = 1;
   out_6310129250639465020[43] = 0;
   out_6310129250639465020[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6310129250639465020[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6310129250639465020[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6310129250639465020[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6310129250639465020[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6310129250639465020[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6310129250639465020[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6310129250639465020[51] = 0;
   out_6310129250639465020[52] = 0;
   out_6310129250639465020[53] = 0;
   out_6310129250639465020[54] = 0;
   out_6310129250639465020[55] = 0;
   out_6310129250639465020[56] = 0;
   out_6310129250639465020[57] = 0;
   out_6310129250639465020[58] = 0;
   out_6310129250639465020[59] = 0;
   out_6310129250639465020[60] = 0;
   out_6310129250639465020[61] = 0;
   out_6310129250639465020[62] = 1;
   out_6310129250639465020[63] = 0;
   out_6310129250639465020[64] = 0;
   out_6310129250639465020[65] = 1;
}
void h_12(double *state, double *unused, double *out_5975007637633465198) {
   out_5975007637633465198[0] = state[0];
   out_5975007637633465198[1] = state[1];
   out_5975007637633465198[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3112328975849042517) {
   out_3112328975849042517[0] = 1;
   out_3112328975849042517[1] = 0;
   out_3112328975849042517[2] = 0;
   out_3112328975849042517[3] = 0;
   out_3112328975849042517[4] = 0;
   out_3112328975849042517[5] = 0;
   out_3112328975849042517[6] = 0;
   out_3112328975849042517[7] = 0;
   out_3112328975849042517[8] = 0;
   out_3112328975849042517[9] = 0;
   out_3112328975849042517[10] = 0;
   out_3112328975849042517[11] = 0;
   out_3112328975849042517[12] = 0;
   out_3112328975849042517[13] = 0;
   out_3112328975849042517[14] = 0;
   out_3112328975849042517[15] = 0;
   out_3112328975849042517[16] = 0;
   out_3112328975849042517[17] = 0;
   out_3112328975849042517[18] = 0;
   out_3112328975849042517[19] = 0;
   out_3112328975849042517[20] = 0;
   out_3112328975849042517[21] = 0;
   out_3112328975849042517[22] = 0;
   out_3112328975849042517[23] = 1;
   out_3112328975849042517[24] = 0;
   out_3112328975849042517[25] = 0;
   out_3112328975849042517[26] = 0;
   out_3112328975849042517[27] = 0;
   out_3112328975849042517[28] = 0;
   out_3112328975849042517[29] = 0;
   out_3112328975849042517[30] = 0;
   out_3112328975849042517[31] = 0;
   out_3112328975849042517[32] = 0;
   out_3112328975849042517[33] = 0;
   out_3112328975849042517[34] = 0;
   out_3112328975849042517[35] = 0;
   out_3112328975849042517[36] = 0;
   out_3112328975849042517[37] = 0;
   out_3112328975849042517[38] = 0;
   out_3112328975849042517[39] = 0;
   out_3112328975849042517[40] = 0;
   out_3112328975849042517[41] = 0;
   out_3112328975849042517[42] = 0;
   out_3112328975849042517[43] = 0;
   out_3112328975849042517[44] = 0;
   out_3112328975849042517[45] = 0;
   out_3112328975849042517[46] = 1;
   out_3112328975849042517[47] = 0;
   out_3112328975849042517[48] = 0;
   out_3112328975849042517[49] = 0;
   out_3112328975849042517[50] = 0;
   out_3112328975849042517[51] = 0;
   out_3112328975849042517[52] = 0;
   out_3112328975849042517[53] = 0;
   out_3112328975849042517[54] = 0;
   out_3112328975849042517[55] = 0;
   out_3112328975849042517[56] = 0;
   out_3112328975849042517[57] = 0;
   out_3112328975849042517[58] = 0;
   out_3112328975849042517[59] = 0;
   out_3112328975849042517[60] = 0;
   out_3112328975849042517[61] = 0;
   out_3112328975849042517[62] = 0;
   out_3112328975849042517[63] = 0;
   out_3112328975849042517[64] = 0;
   out_3112328975849042517[65] = 0;
}
void h_31(double *state, double *unused, double *out_3876391844886862655) {
   out_3876391844886862655[0] = state[7];
   out_3876391844886862655[1] = state[8];
   out_3876391844886862655[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6635591458566297855) {
   out_6635591458566297855[0] = 0;
   out_6635591458566297855[1] = 0;
   out_6635591458566297855[2] = 0;
   out_6635591458566297855[3] = 0;
   out_6635591458566297855[4] = 0;
   out_6635591458566297855[5] = 0;
   out_6635591458566297855[6] = 0;
   out_6635591458566297855[7] = 1;
   out_6635591458566297855[8] = 0;
   out_6635591458566297855[9] = 0;
   out_6635591458566297855[10] = 0;
   out_6635591458566297855[11] = 0;
   out_6635591458566297855[12] = 0;
   out_6635591458566297855[13] = 0;
   out_6635591458566297855[14] = 0;
   out_6635591458566297855[15] = 0;
   out_6635591458566297855[16] = 0;
   out_6635591458566297855[17] = 0;
   out_6635591458566297855[18] = 0;
   out_6635591458566297855[19] = 0;
   out_6635591458566297855[20] = 0;
   out_6635591458566297855[21] = 0;
   out_6635591458566297855[22] = 0;
   out_6635591458566297855[23] = 0;
   out_6635591458566297855[24] = 0;
   out_6635591458566297855[25] = 0;
   out_6635591458566297855[26] = 0;
   out_6635591458566297855[27] = 0;
   out_6635591458566297855[28] = 0;
   out_6635591458566297855[29] = 0;
   out_6635591458566297855[30] = 1;
   out_6635591458566297855[31] = 0;
   out_6635591458566297855[32] = 0;
   out_6635591458566297855[33] = 0;
   out_6635591458566297855[34] = 0;
   out_6635591458566297855[35] = 0;
   out_6635591458566297855[36] = 0;
   out_6635591458566297855[37] = 0;
   out_6635591458566297855[38] = 0;
   out_6635591458566297855[39] = 0;
   out_6635591458566297855[40] = 0;
   out_6635591458566297855[41] = 0;
   out_6635591458566297855[42] = 0;
   out_6635591458566297855[43] = 0;
   out_6635591458566297855[44] = 0;
   out_6635591458566297855[45] = 0;
   out_6635591458566297855[46] = 0;
   out_6635591458566297855[47] = 0;
   out_6635591458566297855[48] = 0;
   out_6635591458566297855[49] = 0;
   out_6635591458566297855[50] = 0;
   out_6635591458566297855[51] = 0;
   out_6635591458566297855[52] = 0;
   out_6635591458566297855[53] = 1;
   out_6635591458566297855[54] = 0;
   out_6635591458566297855[55] = 0;
   out_6635591458566297855[56] = 0;
   out_6635591458566297855[57] = 0;
   out_6635591458566297855[58] = 0;
   out_6635591458566297855[59] = 0;
   out_6635591458566297855[60] = 0;
   out_6635591458566297855[61] = 0;
   out_6635591458566297855[62] = 0;
   out_6635591458566297855[63] = 0;
   out_6635591458566297855[64] = 0;
   out_6635591458566297855[65] = 0;
}
void h_32(double *state, double *unused, double *out_8014753800987825621) {
   out_8014753800987825621[0] = state[3];
   out_8014753800987825621[1] = state[4];
   out_8014753800987825621[2] = state[5];
   out_8014753800987825621[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2416892220894388785) {
   out_2416892220894388785[0] = 0;
   out_2416892220894388785[1] = 0;
   out_2416892220894388785[2] = 0;
   out_2416892220894388785[3] = 1;
   out_2416892220894388785[4] = 0;
   out_2416892220894388785[5] = 0;
   out_2416892220894388785[6] = 0;
   out_2416892220894388785[7] = 0;
   out_2416892220894388785[8] = 0;
   out_2416892220894388785[9] = 0;
   out_2416892220894388785[10] = 0;
   out_2416892220894388785[11] = 0;
   out_2416892220894388785[12] = 0;
   out_2416892220894388785[13] = 0;
   out_2416892220894388785[14] = 0;
   out_2416892220894388785[15] = 0;
   out_2416892220894388785[16] = 0;
   out_2416892220894388785[17] = 0;
   out_2416892220894388785[18] = 0;
   out_2416892220894388785[19] = 0;
   out_2416892220894388785[20] = 0;
   out_2416892220894388785[21] = 0;
   out_2416892220894388785[22] = 0;
   out_2416892220894388785[23] = 0;
   out_2416892220894388785[24] = 0;
   out_2416892220894388785[25] = 0;
   out_2416892220894388785[26] = 1;
   out_2416892220894388785[27] = 0;
   out_2416892220894388785[28] = 0;
   out_2416892220894388785[29] = 0;
   out_2416892220894388785[30] = 0;
   out_2416892220894388785[31] = 0;
   out_2416892220894388785[32] = 0;
   out_2416892220894388785[33] = 0;
   out_2416892220894388785[34] = 0;
   out_2416892220894388785[35] = 0;
   out_2416892220894388785[36] = 0;
   out_2416892220894388785[37] = 0;
   out_2416892220894388785[38] = 0;
   out_2416892220894388785[39] = 0;
   out_2416892220894388785[40] = 0;
   out_2416892220894388785[41] = 0;
   out_2416892220894388785[42] = 0;
   out_2416892220894388785[43] = 0;
   out_2416892220894388785[44] = 0;
   out_2416892220894388785[45] = 0;
   out_2416892220894388785[46] = 0;
   out_2416892220894388785[47] = 0;
   out_2416892220894388785[48] = 0;
   out_2416892220894388785[49] = 1;
   out_2416892220894388785[50] = 0;
   out_2416892220894388785[51] = 0;
   out_2416892220894388785[52] = 0;
   out_2416892220894388785[53] = 0;
   out_2416892220894388785[54] = 0;
   out_2416892220894388785[55] = 0;
   out_2416892220894388785[56] = 0;
   out_2416892220894388785[57] = 0;
   out_2416892220894388785[58] = 0;
   out_2416892220894388785[59] = 0;
   out_2416892220894388785[60] = 0;
   out_2416892220894388785[61] = 0;
   out_2416892220894388785[62] = 0;
   out_2416892220894388785[63] = 0;
   out_2416892220894388785[64] = 0;
   out_2416892220894388785[65] = 0;
   out_2416892220894388785[66] = 0;
   out_2416892220894388785[67] = 0;
   out_2416892220894388785[68] = 0;
   out_2416892220894388785[69] = 0;
   out_2416892220894388785[70] = 0;
   out_2416892220894388785[71] = 0;
   out_2416892220894388785[72] = 1;
   out_2416892220894388785[73] = 0;
   out_2416892220894388785[74] = 0;
   out_2416892220894388785[75] = 0;
   out_2416892220894388785[76] = 0;
   out_2416892220894388785[77] = 0;
   out_2416892220894388785[78] = 0;
   out_2416892220894388785[79] = 0;
   out_2416892220894388785[80] = 0;
   out_2416892220894388785[81] = 0;
   out_2416892220894388785[82] = 0;
   out_2416892220894388785[83] = 0;
   out_2416892220894388785[84] = 0;
   out_2416892220894388785[85] = 0;
   out_2416892220894388785[86] = 0;
   out_2416892220894388785[87] = 0;
}
void h_13(double *state, double *unused, double *out_5843516187364789028) {
   out_5843516187364789028[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5843516187364789028[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5843516187364789028[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8637572793181547907) {
   out_8637572793181547907[0] = 0;
   out_8637572793181547907[1] = 0;
   out_8637572793181547907[2] = 0;
   out_8637572793181547907[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8637572793181547907[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8637572793181547907[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8637572793181547907[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8637572793181547907[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8637572793181547907[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8637572793181547907[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8637572793181547907[10] = 0;
   out_8637572793181547907[11] = 0;
   out_8637572793181547907[12] = 0;
   out_8637572793181547907[13] = 0;
   out_8637572793181547907[14] = 0;
   out_8637572793181547907[15] = 0;
   out_8637572793181547907[16] = 0;
   out_8637572793181547907[17] = 0;
   out_8637572793181547907[18] = 0;
   out_8637572793181547907[19] = 0;
   out_8637572793181547907[20] = 0;
   out_8637572793181547907[21] = 0;
   out_8637572793181547907[22] = 0;
   out_8637572793181547907[23] = 0;
   out_8637572793181547907[24] = 0;
   out_8637572793181547907[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8637572793181547907[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8637572793181547907[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8637572793181547907[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8637572793181547907[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8637572793181547907[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8637572793181547907[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8637572793181547907[32] = 0;
   out_8637572793181547907[33] = 0;
   out_8637572793181547907[34] = 0;
   out_8637572793181547907[35] = 0;
   out_8637572793181547907[36] = 0;
   out_8637572793181547907[37] = 0;
   out_8637572793181547907[38] = 0;
   out_8637572793181547907[39] = 0;
   out_8637572793181547907[40] = 0;
   out_8637572793181547907[41] = 0;
   out_8637572793181547907[42] = 0;
   out_8637572793181547907[43] = 0;
   out_8637572793181547907[44] = 0;
   out_8637572793181547907[45] = 0;
   out_8637572793181547907[46] = 0;
   out_8637572793181547907[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8637572793181547907[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8637572793181547907[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8637572793181547907[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8637572793181547907[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8637572793181547907[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8637572793181547907[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8637572793181547907[54] = 0;
   out_8637572793181547907[55] = 0;
   out_8637572793181547907[56] = 0;
   out_8637572793181547907[57] = 0;
   out_8637572793181547907[58] = 0;
   out_8637572793181547907[59] = 0;
   out_8637572793181547907[60] = 0;
   out_8637572793181547907[61] = 0;
   out_8637572793181547907[62] = 0;
   out_8637572793181547907[63] = 0;
   out_8637572793181547907[64] = 0;
   out_8637572793181547907[65] = 0;
}
void h_14(double *state, double *unused, double *out_4165312183178748366) {
   out_4165312183178748366[0] = state[10];
   out_4165312183178748366[1] = state[11];
   out_4165312183178748366[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7890595737251413667) {
   out_7890595737251413667[0] = 0;
   out_7890595737251413667[1] = 0;
   out_7890595737251413667[2] = 0;
   out_7890595737251413667[3] = 0;
   out_7890595737251413667[4] = 0;
   out_7890595737251413667[5] = 0;
   out_7890595737251413667[6] = 0;
   out_7890595737251413667[7] = 0;
   out_7890595737251413667[8] = 0;
   out_7890595737251413667[9] = 0;
   out_7890595737251413667[10] = 1;
   out_7890595737251413667[11] = 0;
   out_7890595737251413667[12] = 0;
   out_7890595737251413667[13] = 0;
   out_7890595737251413667[14] = 0;
   out_7890595737251413667[15] = 0;
   out_7890595737251413667[16] = 0;
   out_7890595737251413667[17] = 0;
   out_7890595737251413667[18] = 0;
   out_7890595737251413667[19] = 0;
   out_7890595737251413667[20] = 0;
   out_7890595737251413667[21] = 0;
   out_7890595737251413667[22] = 0;
   out_7890595737251413667[23] = 0;
   out_7890595737251413667[24] = 0;
   out_7890595737251413667[25] = 0;
   out_7890595737251413667[26] = 0;
   out_7890595737251413667[27] = 0;
   out_7890595737251413667[28] = 0;
   out_7890595737251413667[29] = 0;
   out_7890595737251413667[30] = 0;
   out_7890595737251413667[31] = 0;
   out_7890595737251413667[32] = 0;
   out_7890595737251413667[33] = 1;
   out_7890595737251413667[34] = 0;
   out_7890595737251413667[35] = 0;
   out_7890595737251413667[36] = 0;
   out_7890595737251413667[37] = 0;
   out_7890595737251413667[38] = 0;
   out_7890595737251413667[39] = 0;
   out_7890595737251413667[40] = 0;
   out_7890595737251413667[41] = 0;
   out_7890595737251413667[42] = 0;
   out_7890595737251413667[43] = 0;
   out_7890595737251413667[44] = 0;
   out_7890595737251413667[45] = 0;
   out_7890595737251413667[46] = 0;
   out_7890595737251413667[47] = 0;
   out_7890595737251413667[48] = 0;
   out_7890595737251413667[49] = 0;
   out_7890595737251413667[50] = 0;
   out_7890595737251413667[51] = 0;
   out_7890595737251413667[52] = 0;
   out_7890595737251413667[53] = 0;
   out_7890595737251413667[54] = 0;
   out_7890595737251413667[55] = 0;
   out_7890595737251413667[56] = 1;
   out_7890595737251413667[57] = 0;
   out_7890595737251413667[58] = 0;
   out_7890595737251413667[59] = 0;
   out_7890595737251413667[60] = 0;
   out_7890595737251413667[61] = 0;
   out_7890595737251413667[62] = 0;
   out_7890595737251413667[63] = 0;
   out_7890595737251413667[64] = 0;
   out_7890595737251413667[65] = 0;
}
void h_33(double *state, double *unused, double *out_6095174459977264046) {
   out_6095174459977264046[0] = state[16];
   out_6095174459977264046[1] = state[17];
   out_6095174459977264046[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8660595610504396157) {
   out_8660595610504396157[0] = 0;
   out_8660595610504396157[1] = 0;
   out_8660595610504396157[2] = 0;
   out_8660595610504396157[3] = 0;
   out_8660595610504396157[4] = 0;
   out_8660595610504396157[5] = 0;
   out_8660595610504396157[6] = 0;
   out_8660595610504396157[7] = 0;
   out_8660595610504396157[8] = 0;
   out_8660595610504396157[9] = 0;
   out_8660595610504396157[10] = 0;
   out_8660595610504396157[11] = 0;
   out_8660595610504396157[12] = 0;
   out_8660595610504396157[13] = 0;
   out_8660595610504396157[14] = 0;
   out_8660595610504396157[15] = 0;
   out_8660595610504396157[16] = 1;
   out_8660595610504396157[17] = 0;
   out_8660595610504396157[18] = 0;
   out_8660595610504396157[19] = 0;
   out_8660595610504396157[20] = 0;
   out_8660595610504396157[21] = 0;
   out_8660595610504396157[22] = 0;
   out_8660595610504396157[23] = 0;
   out_8660595610504396157[24] = 0;
   out_8660595610504396157[25] = 0;
   out_8660595610504396157[26] = 0;
   out_8660595610504396157[27] = 0;
   out_8660595610504396157[28] = 0;
   out_8660595610504396157[29] = 0;
   out_8660595610504396157[30] = 0;
   out_8660595610504396157[31] = 0;
   out_8660595610504396157[32] = 0;
   out_8660595610504396157[33] = 0;
   out_8660595610504396157[34] = 0;
   out_8660595610504396157[35] = 0;
   out_8660595610504396157[36] = 0;
   out_8660595610504396157[37] = 0;
   out_8660595610504396157[38] = 0;
   out_8660595610504396157[39] = 1;
   out_8660595610504396157[40] = 0;
   out_8660595610504396157[41] = 0;
   out_8660595610504396157[42] = 0;
   out_8660595610504396157[43] = 0;
   out_8660595610504396157[44] = 0;
   out_8660595610504396157[45] = 0;
   out_8660595610504396157[46] = 0;
   out_8660595610504396157[47] = 0;
   out_8660595610504396157[48] = 0;
   out_8660595610504396157[49] = 0;
   out_8660595610504396157[50] = 0;
   out_8660595610504396157[51] = 0;
   out_8660595610504396157[52] = 0;
   out_8660595610504396157[53] = 0;
   out_8660595610504396157[54] = 0;
   out_8660595610504396157[55] = 0;
   out_8660595610504396157[56] = 0;
   out_8660595610504396157[57] = 0;
   out_8660595610504396157[58] = 0;
   out_8660595610504396157[59] = 0;
   out_8660595610504396157[60] = 0;
   out_8660595610504396157[61] = 0;
   out_8660595610504396157[62] = 1;
   out_8660595610504396157[63] = 0;
   out_8660595610504396157[64] = 0;
   out_8660595610504396157[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8373769282202649548) {
  H(in_vec, out_8373769282202649548);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7843686144394736817) {
  err_fun(nom_x, delta_x, out_7843686144394736817);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4225469103014996173) {
  inv_err_fun(nom_x, true_x, out_4225469103014996173);
}
void live_H_mod_fun(double *state, double *out_8358142402501933144) {
  H_mod_fun(state, out_8358142402501933144);
}
void live_f_fun(double *state, double dt, double *out_8210762158604147154) {
  f_fun(state,  dt, out_8210762158604147154);
}
void live_F_fun(double *state, double dt, double *out_2457475553137628519) {
  F_fun(state,  dt, out_2457475553137628519);
}
void live_h_4(double *state, double *unused, double *out_7478004446258192637) {
  h_4(state, unused, out_7478004446258192637);
}
void live_H_4(double *state, double *unused, double *out_3268929401193690479) {
  H_4(state, unused, out_3268929401193690479);
}
void live_h_9(double *state, double *unused, double *out_4165312183178748366) {
  h_9(state, unused, out_4165312183178748366);
}
void live_H_9(double *state, double *unused, double *out_7890595737251413667) {
  H_9(state, unused, out_7890595737251413667);
}
void live_h_10(double *state, double *unused, double *out_1153847551310806058) {
  h_10(state, unused, out_1153847551310806058);
}
void live_H_10(double *state, double *unused, double *out_6310129250639465020) {
  H_10(state, unused, out_6310129250639465020);
}
void live_h_12(double *state, double *unused, double *out_5975007637633465198) {
  h_12(state, unused, out_5975007637633465198);
}
void live_H_12(double *state, double *unused, double *out_3112328975849042517) {
  H_12(state, unused, out_3112328975849042517);
}
void live_h_31(double *state, double *unused, double *out_3876391844886862655) {
  h_31(state, unused, out_3876391844886862655);
}
void live_H_31(double *state, double *unused, double *out_6635591458566297855) {
  H_31(state, unused, out_6635591458566297855);
}
void live_h_32(double *state, double *unused, double *out_8014753800987825621) {
  h_32(state, unused, out_8014753800987825621);
}
void live_H_32(double *state, double *unused, double *out_2416892220894388785) {
  H_32(state, unused, out_2416892220894388785);
}
void live_h_13(double *state, double *unused, double *out_5843516187364789028) {
  h_13(state, unused, out_5843516187364789028);
}
void live_H_13(double *state, double *unused, double *out_8637572793181547907) {
  H_13(state, unused, out_8637572793181547907);
}
void live_h_14(double *state, double *unused, double *out_4165312183178748366) {
  h_14(state, unused, out_4165312183178748366);
}
void live_H_14(double *state, double *unused, double *out_7890595737251413667) {
  H_14(state, unused, out_7890595737251413667);
}
void live_h_33(double *state, double *unused, double *out_6095174459977264046) {
  h_33(state, unused, out_6095174459977264046);
}
void live_H_33(double *state, double *unused, double *out_8660595610504396157) {
  H_33(state, unused, out_8660595610504396157);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
